services:
  trading-bot:
    build: 
      context: .
      args:
        TRADING_MODE: ${TRADING_MODE:-production}
        BUILD_ENV: ${ENVIRONMENT:-production}
    image: smart-ape-bot:latest
    container_name: smart-ape-trading
    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - TRADING_MODE=${TRADING_MODE:-production}
      - ENVIRONMENT=${ENVIRONMENT:-production}
    ports:
      - "${BOT_PORT:-8080}:8080"
    volumes:
      - ./.env.production:/app/.env.production:ro
      - ./config/env.template:/app/config/env.template:ro
      - ./data:/app/data
      - ./logs:/app/logs
      - ./wallets:/app/wallets
    restart: unless-stopped
    depends_on:
      - redis
      - prometheus
    healthcheck:
      test: ["CMD", "python", "-c", "from worker_ant_v1.core.unified_config import get_config_manager; get_config_manager()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  prometheus:
    image: prom/prometheus:latest
    container_name: antbot-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: antbot-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    depends_on:
      - prometheus

  redis:
    image: redis:alpine
    container_name: antbot-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  node-exporter:
    image: prom/node-exporter:latest
    container_name: antbot-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  redis_data:

networks:
  default:
    name: antbot-network

global:
  # The smarthost and SMTP sender used for mail notifications
  smtp_smarthost: 'smtp.example.com:587'
  smtp_from: 'alertmanager@example.com'
  smtp_auth_username: 'alertmanager'
  smtp_auth_password: 'password'
  smtp_require_tls: true

  # The Slack webhook URL
  slack_api_url: 'https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX'

  # Default receiver
  resolve_timeout: 5m

# The root route on which each incoming alert enters
route:
  # This group_wait time limits the time to wait for inhibiting alerts
  group_wait: 30s
  # This wait time identifies the time to wait before sending a notification again if it has already been sent
  group_interval: 5m
  # This repeat interval in route configuration means when to resend alert if no group_interval is present
  repeat_interval: 4h

  # This section defines notification receivers for alerts
  receiver: 'slack-notifications'
  
  # This section defines when to route alerts to different receivers
  routes:
  - receiver: 'critical-pager'
    match:
      severity: critical
    repeat_interval: 1h
  
  - receiver: 'slack-notifications'
    match_re:
      severity: ^(warning|info)$
    group_by: [alertname, component]
    
  - receiver: 'email-notifications'
    match:
      severity: email
    group_wait: 30s
    group_interval: 5m
    repeat_interval: 4h

# Inhibition rules allow to mute a set of alerts given that another alert is firing
inhibit_rules:
- source_match:
    severity: 'critical'
  target_match:
    severity: 'warning'
  # Apply inhibition if the alertname is the same
  equal: ['alertname', 'component']

receivers:
- name: 'slack-notifications'
  slack_configs:
  - channel: '#antbot-alerts'
    send_resolved: true
    title: '{{ if eq .Status "firing" }}ðŸ”¥{{ else }}âœ…{{ end }} [{{ .Status | toUpper }}] {{ .CommonLabels.alertname }}'
    text: >-
      {{ range .Alerts }}
        *Alert:* {{ .Labels.alertname }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
        *Description:* {{ .Annotations.description }}
        *Details:*
        {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
        {{ end }}
      {{ end }}

- name: 'critical-pager'
  pagerduty_configs:
  - service_key: '<pagerduty-service-key>'
    send_resolved: true
    description: '{{ .CommonAnnotations.summary }}'
    details:
      firing: '{{ .Alerts.Firing | len }}'
      resolved: '{{ .Alerts.Resolved | len }}'
      instances: '{{ range .Alerts }}{{ .Labels.instance }} {{ end }}'
  
  # Also send to Slack for immediate visibility
  slack_configs:
  - channel: '#antbot-critical'
    send_resolved: true
    title: 'ðŸš¨ [CRITICAL ALERT] {{ .CommonLabels.alertname }}'
    text: >-
      {{ range .Alerts }}
        *Alert:* {{ .Labels.alertname }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }}
        *Description:* {{ .Annotations.description }}
        *Details:*
        {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
        {{ end }}
      {{ end }}

- name: 'email-notifications'
  email_configs:
  - to: 'team@example.com'
    send_resolved: true
    headers:
      subject: '{{ .CommonLabels.alertname }}'
    html: |
      {{ range .Alerts }}
        <h3>{{ .Labels.alertname }}</h3>
        <p><strong>Description:</strong> {{ .Annotations.description }}</p>
        <p><strong>Details:</strong></p>
        <ul>
          {{ range .Labels.SortedPairs }}
            <li><strong>{{ .Name }}:</strong> {{ .Value }}</li>
          {{ end }}
        </ul>
      {{ end }} 